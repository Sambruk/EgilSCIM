# Configuration file for Employment objects

# A generated type
# This doesn't exist in the catalogue so it needs to be created on the fly.
# It is generated from one types repeated attribute e.g. Teacher.schoolUnitRef
# Each Teachers schoolUnitRef becomes an Employment.

Employment-scim-url-endpoint = Employments

Employment-is-generated = true

# we are loading users of type EmpType1, from them we create
# one Employment per SchoolUnit.
# So, we need to know the users attribute for SchoolUnit,
# i.e. which attribute points to the relation
Employment-generate-key = Teacher.ou

# We need to find the other part, the SchoolUnit
# ie. Teacher.schoolUnitRef is the SchoolUnit we need and SchoolUnit has
# that info in uid
Employment-remote-relation-id = SchoolUnit.entryDN

# SchoolUnit, unique identifier. i.e. other parts GUID
Employment-generate-remote-part = SchoolUnit.entryUUID

# Teacher, unique identifier. i.e. this part GUID
Employment-generate-local-part = Teacher.entryUUID

# name of the attribute holding the Employment unique id,
# this is used when creating the scim message below,
# (use GUID for consistency)
Employment-unique-identifier = entryUUID

Employment-ignore-missing-schoolunit = true

Employment-scim-json-template = <?
{
    "schemas": ["urn:scim:schemas:extension:sis:school:1.0:Employment"],
    "externalId": "${entryUUID}",
    "employedAt":  {
                   "value": "${SchoolUnit.entryUUID}",
                   "$ref": "SchoolUnits/${SchoolUnit.entryUUID}"
    },
    "user":  {
             "value": "${Teacher.entryUUID}",
             "$ref": "Users/${Teacher.entryUUID}"
    },
    "employmentRole": "LÃ¤rare",
    "signature": "${Teacher.uid}"
}
?>
