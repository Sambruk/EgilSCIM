# Configuration file for Employment objects

# A generated type
# This doesn't exist in the catalogue so it needs to be created on the fly.
# It is generated from one type's repeated attribute e.g. Teacher.schoolUnitRef
# Each Teachers schoolUnitRef becomes an Employment.

Employment-scim-url-endpoint = Employments

Employment-is-generated = true

# We are loading Teachers, from them we create
# one Employment per SchoolUnit.
# So, we need to know the users attribute for SchoolUnit,
# i.e. which attribute points to the relation
Employment-generate-key = Teacher.schoolUnitRef

# We need to find the matching attribute in the SchoolUnit
Employment-remote-relation-id = SchoolUnit.schoolUnitCode

# SchoolUnit, unique identifier. i.e. other part's UUID
Employment-generate-remote-part = SchoolUnit.GUID

# Teacher, unique identifier. i.e. this part's UUID
Employment-generate-local-part = Teacher.GUID

# Name of the attribute holding the Employment unique id,
# this is used when creating the scim message below.
Employment-unique-identifier = GUID

# By default we'll get a warning if a teacher has an attribute for
# a school unit that we haven't loaded. Sometimes that's expected,
# for instance when filtering out certain school units, so the
# warning can be disabled with this setting.
Employment-ignore-missing-schoolunit = true

Employment-scim-json-template = <?
{
    "schemas": ["urn:scim:schemas:extension:sis:school:1.0:Employment"],
    "externalId": "${GUID}",
    "employedAt":  {
                   "value": "${SchoolUnit.GUID}",
                   "$ref": "SchoolUnits/${SchoolUnit.GUID}"
    },
    "user":  {
             "value": "${Teacher.GUID}",
             "$ref": "Users/${Teacher.GUID}"
    },
    "employmentRole": "LÃ¤rare",
    "signature": "${Teacher.sign}"
}
?>
